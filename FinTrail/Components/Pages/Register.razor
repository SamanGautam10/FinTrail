@page "/register"

@using FinTrail.Model
@using FinTrail.Services
@using FinTrail.Services.Interface
@inject NavigationManager Nav
@inject IUserInterface UserService

<head>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&family=Roboto:wght@400;500&display=swap" rel="stylesheet">
</head>

<style>
    body {
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-image: url('/images/login-bg.jpg');
        background-size: cover;
        font-family: 'Poppins', sans-serif;
    }

    .login-container {
        background-color: rgba(239,238,239,255);
        padding: 20px;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        width: 350px;
        text-align: center;
    }

        .login-container h2 {
            margin-bottom: 20px;
        }

        .login-container input,
        .login-container select,
        .login-container button {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ccc;
            border-radius: 10px;
        }

        .login-container button {
            background-color: #5a4fcf;
            color: white;
            border: none;
            cursor: pointer;
        }

            .login-container button:hover {
                background-color: #473cb3;
            }

        .login-container span {
            display: block;
            margin-top: 10px;
            color: #5a4fcf;
            cursor: pointer;
        }

            .login-container span:hover {
                text-decoration: underline;
            }

        .login-container span {
            display: block;
            margin-top: 10px;
            color: #5a4fcf;
            cursor: pointer;
        }

        .login-container h3 {
            margin: 5px 0;
            font-size: 24px;
            color: #5a4fcf;
            font-weight: bold;
        }

        .login-container h4 {
            margin: 5px 0;
            font-size: 15px;
            color: #5a4fcf;
            font-weight: normal;
        }
</style>

<div class="login-container">
    <h2>Register</h2>
    <h3>FinTrail</h3>
    <h4>Track, Save, and Grow Your Wealth</h4>
    <form @onsubmit="HandleRegister">
        <input type="text" placeholder="Username" @bind="Username" required />
        <input type="password" placeholder="Password" @bind="Password" required />
        <input type="password" placeholder="Confirm Password" @bind="ConfirmPassword" required />
        <select @bind="SelectedCurrency" required>
            <option value="" disabled selected>Select Currency</option>
            <option value="Rs.">NPR</option>
            <option value="€.">EUR</option>
            <option value="£.">GBP</option>
            <option value="$.">USD</option>
        </select>
        <button type="submit">Register</button>
    </form>
    @if (ErrorMessage != null)
    {
            <p style="color:red;">@ErrorMessage</p>
    }
    <span @onclick="GoToLoginPage">Already have an Account?</span>
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string ConfirmPassword { get; set; }
    private string SelectedCurrency { get; set; }
    private string ErrorMessage { get; set; }

    private async Task HandleRegister()
    {
        try
        {
            // Validate the passwords
            if (Password != ConfirmPassword)
            {
                ErrorMessage = "Passwords do not match. Please try again.";
                return;
            }

            // Create a new User object
            var newUser = new User { Username = Username, Password = Password, SelectedCurrency = SelectedCurrency };

            // Call the Register method from UserService
            if (UserService.Register(newUser))
            {
                // Redirect to the login page after successful registration
                Nav.NavigateTo("/");
            }
            else
            {
                ErrorMessage = "Username already exists. Please choose a different username.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"{ex.Message}";
        }
    }

    private void GoToLoginPage()
    {
        // Redirect to the login page
        Nav.NavigateTo("/");
    }
}